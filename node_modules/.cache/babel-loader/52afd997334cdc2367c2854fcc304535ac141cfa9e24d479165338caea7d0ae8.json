{"ast":null,"code":"var _jsxFileName = \"D:\\\\STUDY\\\\6TH SEMESTER\\\\REACT\\\\TTT_Project\\\\ttt\\\\src\\\\FileReader.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction FileReader() {\n  _s();\n  const [fileContent, setFileContent] = useState(\"\");\n  const [wordCount, setWordCount] = useState({});\n  const handleSubmit = event => {\n    event.preventDefault();\n    fetch(\"https://www.terriblytinytales.com/test.txt\").then(response => response.text()).then(text => {\n      const words = text.toLowerCase().split(/\\W+/);\n      const frequency = words.reduce((acc, word) => {\n        acc[word] = (acc[word] || 0) + 1;\n        return acc;\n      }, {});\n      setWordCount(frequency);\n      setFileContent(text);\n    }).catch(error => console.log(error));\n  };\n  const histoGram = () => {\n    return Object.entries(wordCount).sort((_ref, _ref2) => {\n      let [, a] = _ref;\n      let [, b] = _ref2;\n      return b - a;\n    }).map(_ref3 => {\n      let [word, frequency] = _ref3;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [word, \" : \", Array(frequency).fill(\"*\"), \" \"]\n      }, word, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Fetching Details\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: fileContent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Words:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: Object.entries(wordCount).sort((_ref4, _ref5) => {\n        let [, a] = _ref4;\n        let [, b] = _ref5;\n        return b - a;\n      }).map(_ref6 => {\n        let [word, frequency] = _ref6;\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [word, \" : \", frequency]\n        }, word, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n}\n_s(FileReader, \"zCdbnV9Qrh8l0sYC7Hr04IlpUC0=\");\n_c = FileReader;\nexport default FileReader;\nvar _c;\n$RefreshReg$(_c, \"FileReader\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","FileReader","_s","fileContent","setFileContent","wordCount","setWordCount","handleSubmit","event","preventDefault","fetch","then","response","text","words","toLowerCase","split","frequency","reduce","acc","word","catch","error","console","log","histoGram","Object","entries","sort","_ref","_ref2","a","b","map","_ref3","children","Array","fill","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","_ref4","_ref5","_ref6","_c","$RefreshReg$"],"sources":["D:/STUDY/6TH SEMESTER/REACT/TTT_Project/ttt/src/FileReader.js"],"sourcesContent":["import React from \"react\"; \r\nimport { useState} from \"react\";\r\n\r\nfunction FileReader(){\r\n\r\n    const[fileContent, setFileContent] = useState(\"\");\r\n    const[wordCount, setWordCount] = useState({})\r\n\r\n    const handleSubmit = (event) =>{\r\n         event.preventDefault();\r\n         fetch(\"https://www.terriblytinytales.com/test.txt\")\r\n        .then((response) => response.text())\r\n        .then((text) => {\r\n            const words = text.toLowerCase().split(/\\W+/);\r\n            const frequency = words.reduce((acc, word) => {\r\n            acc[word] = (acc[word] || 0) + 1;\r\n            return acc;\r\n            }, {});\r\n            setWordCount(frequency);\r\n            setFileContent(text);\r\n        })\r\n        .catch((error) => console.log(error));\r\n        \r\n    };\r\n\r\n    const histoGram = ()=>{\r\n        return  Object.entries(wordCount)\r\n            .sort(([, a],[, b]) => b - a)\r\n            .map(([word, frequency]) =>(\r\n                <div key={word}>\r\n                {word} : {Array(frequency).fill(\"*\")} </div>\r\n            ));\r\n    }\r\n    return(\r\n        <div>\r\n            <h1>Fetching Details</h1>\r\n            <form onSubmit={handleSubmit}> \r\n                <button type=\"submit\">submit</button>\r\n            </form>\r\n            <p>{fileContent}</p>\r\n            <h2>Words:</h2>\r\n            <ul>\r\n                {Object.entries(wordCount)\r\n                .sort(([, a],[, b]) => b - a)\r\n                .map(([word, frequency]) =>(\r\n                    <li key= {word}>\r\n                        {word} : {frequency}\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FileReader;\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}