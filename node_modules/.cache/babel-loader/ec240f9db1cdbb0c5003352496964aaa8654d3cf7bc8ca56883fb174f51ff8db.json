{"ast":null,"code":"var _jsxFileName = \"D:\\\\STUDY\\\\6TH SEMESTER\\\\REACT\\\\TTT_Project\\\\ttt\\\\src\\\\FileReader.js\",\n  _s = $RefreshSig$();\n// import React from \"react\"; \n// import { useState, useEffect  } from \"react\";\n\n// function FileReader({fileUrl}){\n\n//     const[fileContent, setFileContent] = useState(\"\");\n\n//      useEffect(()=>{\n//         async function fetchData() {\n//             const response = await fetch(fileUrl);\n//             const data = await response.text()\n//             setFileContent(data);\n//             }\n\n//             fetchData();\n//         },[fileUrl])\n\n//     return(\n//         <div>\n//             <h1>FILE CONTENTS</h1>\n//             <form>\n//                 <label>Fetching file</label>\n//                 <input type=\"submit\" name=\"submit\" onSubmit={<p>{fileContent}</p>}/>\n//             </form>\n//         </div>\n//     )\n// }\n\n// export default FileReader;\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction FileReader() {\n  _s();\n  const [fileUrl, setFileUrl] = useState('');\n  const [fileContent, setFileContent] = useState('');\n  async function handleSubmit(event) {\n    event.preventDefault();\n    const response = await fetch(fileUrl);\n    const text = await response.text();\n    setFileContent(text);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"File URL:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: fileUrl,\n          onChange: event => setFileUrl(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n      children: fileContent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n_s(FileReader, \"W8VZW9+AS3Q0KH0SGkXcUUVInkY=\");\n_c = FileReader;\nexport default FileReader;\nvar _c;\n$RefreshReg$(_c, \"FileReader\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","FileReader","_s","fileUrl","setFileUrl","fileContent","setFileContent","handleSubmit","event","preventDefault","response","fetch","text","children","onSubmit","type","value","onChange","target","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/STUDY/6TH SEMESTER/REACT/TTT_Project/ttt/src/FileReader.js"],"sourcesContent":["// import React from \"react\"; \r\n// import { useState, useEffect  } from \"react\";\r\n\r\n// function FileReader({fileUrl}){\r\n\r\n//     const[fileContent, setFileContent] = useState(\"\");\r\n\r\n//      useEffect(()=>{\r\n//         async function fetchData() {\r\n//             const response = await fetch(fileUrl);\r\n//             const data = await response.text()\r\n//             setFileContent(data);\r\n//             }\r\n            \r\n//             fetchData();\r\n//         },[fileUrl])\r\n\r\n//     return(\r\n//         <div>\r\n//             <h1>FILE CONTENTS</h1>\r\n//             <form>\r\n//                 <label>Fetching file</label>\r\n//                 <input type=\"submit\" name=\"submit\" onSubmit={<p>{fileContent}</p>}/>\r\n//             </form>\r\n//         </div>\r\n//     )\r\n// }\r\n\r\n// export default FileReader;\r\n\r\nimport React, { useState } from 'react';\r\n\r\nfunction FileReader() {\r\n  const [fileUrl, setFileUrl] = useState('');\r\n  const [fileContent, setFileContent] = useState('');\r\n\r\n  async function handleSubmit(event) {\r\n    event.preventDefault();\r\n    const response = await fetch(fileUrl);\r\n    const text = await response.text();\r\n    setFileContent(text);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={handleSubmit}>\r\n        <label>\r\n          File URL:\r\n          <input type=\"text\" value={fileUrl} onChange={(event) => setFileUrl(event.target.value)} />\r\n        </label>\r\n        <button type=\"submit\">Submit</button>\r\n      </form>\r\n      <pre>{fileContent}</pre>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FileReader;\r\n"],"mappings":";;AAAA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACpB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACO,WAAW,EAAEC,cAAc,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAElD,eAAeS,YAAYA,CAACC,KAAK,EAAE;IACjCA,KAAK,CAACC,cAAc,CAAC,CAAC;IACtB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACR,OAAO,CAAC;IACrC,MAAMS,IAAI,GAAG,MAAMF,QAAQ,CAACE,IAAI,CAAC,CAAC;IAClCN,cAAc,CAACM,IAAI,CAAC;EACtB;EAEA,oBACEZ,OAAA;IAAAa,QAAA,gBACEb,OAAA;MAAMc,QAAQ,EAAEP,YAAa;MAAAM,QAAA,gBAC3Bb,OAAA;QAAAa,QAAA,GAAO,WAEL,eAAAb,OAAA;UAAOe,IAAI,EAAC,MAAM;UAACC,KAAK,EAAEb,OAAQ;UAACc,QAAQ,EAAGT,KAAK,IAAKJ,UAAU,CAACI,KAAK,CAACU,MAAM,CAACF,KAAK;QAAE;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrF,CAAC,eACRtB,OAAA;QAAQe,IAAI,EAAC,QAAQ;QAAAF,QAAA,EAAC;MAAM;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjC,CAAC,eACPtB,OAAA;MAAAa,QAAA,EAAMR;IAAW;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrB,CAAC;AAEV;AAACpB,EAAA,CAvBQD,UAAU;AAAAsB,EAAA,GAAVtB,UAAU;AAyBnB,eAAeA,UAAU;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}