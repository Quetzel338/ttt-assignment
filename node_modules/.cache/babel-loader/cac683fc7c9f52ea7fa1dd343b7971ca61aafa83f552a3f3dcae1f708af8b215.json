{"ast":null,"code":"var _jsxFileName = \"D:\\\\STUDY\\\\6TH SEMESTER\\\\REACT\\\\TTT_Project\\\\ttt\\\\src\\\\FileReader.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useState } from \"react\";\nimport Chart from \"react-apexcharts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction FileReader() {\n  _s();\n  const [fileContent, setFileContent] = useState(\"\");\n  const [wordCount, setWordCount] = useState({});\n  const [options, setOptions] = useState({\n    options: {\n      chart: {\n        id: \"histogram\"\n      },\n      xaxis: {\n        categories: []\n      }\n    }\n  });\n  const [series, setSeries] = useState([{\n    name: \"Frequency\",\n    data: []\n  }]);\n  const handleSubmit = event => {\n    event.preventDefault();\n    fetch(\"https://www.terriblytinytales.com/test.txt\").then(response => response.text()).then(text => {\n      const cleanedData = text.replace(/[^A-Za-z]/g, \" \");\n      const words = cleanedData.toLowerCase().split(\" \");\n      const frequency = words.reduce((acc, word) => {\n        acc[word] = (acc[word] || 0) + 1;\n        return acc;\n      }, {});\n      setWordCount(frequency);\n      setFileContent(text);\n      const categories = Object.keys(frequency).slice(1, 20).sort((a, b) => frequency[b] - frequency[a]);\n      const dataSeries = Object.values(frequency).slice(1, 20).sort((a, b) => b - a);\n      setOptions({\n        ...options,\n        xaxis: {\n          ...options.xaxis,\n          categories\n        }\n      });\n      setSeries([{\n        name: \"frequency\",\n        data: dataSeries\n      }]);\n    }).catch(error => console.log(error));\n  };\n  const createChart = () => {\n    return series.map(ser => ({\n      name: ser.name,\n      data: ser.data.map((value, index) => ({\n        x: options.xaxis.categories[index],\n        y: value\n      }))\n    }));\n  };\n  const handleExport = () => {\n    const csvFile = [[\"Word\", \"Frequency\"], ...options.xaxis.categories.map((category, index) => {\n      category, series[0].data[index];\n    })].map(row => row.join(\",\")).join();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Fetching Details\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: fileContent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Words:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Chart, {\n        options: options,\n        series: createChart(),\n        type: \"bar\",\n        width: \"500\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"btn\",\n        onClick: handleExport,\n        children: \"Export\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 9\n  }, this);\n}\n_s(FileReader, \"GdJnjKDZ0TMnFEqqAewYsmgvnVI=\");\n_c = FileReader;\nexport default FileReader;\nvar _c;\n$RefreshReg$(_c, \"FileReader\");","map":{"version":3,"names":["React","useState","Chart","jsxDEV","_jsxDEV","FileReader","_s","fileContent","setFileContent","wordCount","setWordCount","options","setOptions","chart","id","xaxis","categories","series","setSeries","name","data","handleSubmit","event","preventDefault","fetch","then","response","text","cleanedData","replace","words","toLowerCase","split","frequency","reduce","acc","word","Object","keys","slice","sort","a","b","dataSeries","values","catch","error","console","log","createChart","map","ser","value","index","x","y","handleExport","csvFile","category","row","join","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","width","onClick","_c","$RefreshReg$"],"sources":["D:/STUDY/6TH SEMESTER/REACT/TTT_Project/ttt/src/FileReader.js"],"sourcesContent":["import React from \"react\"; \r\nimport { useState} from \"react\";\r\nimport Chart from \"react-apexcharts\";\r\n\r\nfunction FileReader(){\r\n\r\n    const[fileContent, setFileContent] = useState(\"\");\r\n    const[wordCount, setWordCount] = useState({})\r\n    const[options, setOptions] = useState({options: {\r\n        chart: {\r\n          id: \"histogram\"\r\n        },\r\n        xaxis: {\r\n          categories: []\r\n        }\r\n      },\r\n    });\r\n\r\n    const[series, setSeries] = useState([\r\n        {\r\n            name : \"Frequency\",\r\n            data :[],\r\n        }\r\n    ]);\r\n\r\n    const handleSubmit = (event) =>{\r\n         event.preventDefault();\r\n         fetch(\"https://www.terriblytinytales.com/test.txt\")\r\n        .then((response) => response.text())\r\n        .then((text) => {\r\n            const cleanedData = text.replace(/[^A-Za-z]/g, \" \");\r\n            const words = cleanedData.toLowerCase().split(\" \");\r\n            const frequency = words.reduce((acc, word) => {\r\n            acc[word] = (acc[word] || 0) + 1;\r\n            return acc;\r\n            }, {});\r\n            setWordCount(frequency);\r\n            setFileContent(text);\r\n\r\n            const categories = Object.keys(frequency).slice(1,20).sort((a,b) => frequency[b] - frequency[a])\r\n            const dataSeries = Object.values(frequency).slice(1,20).sort((a,b) => b - a)\r\n            setOptions({...options,\r\n            xaxis :{\r\n                ...options.xaxis,categories\r\n             }\r\n            })\r\n            setSeries([\r\n                {   name : \"frequency\",\r\n                    data : dataSeries\r\n\r\n                }\r\n            ])\r\n\r\n        })\r\n        .catch((error) => console.log(error));\r\n    \r\n    };\r\n\r\n    const createChart = () =>{\r\n        return series.map((ser)=>({\r\n            name : ser.name,\r\n            data : ser.data.map((value, index)=>({\r\n                x : options.xaxis.categories[index],\r\n                y : value,\r\n            })),\r\n        }))\r\n    };\r\n\r\n    const handleExport = ()=>{\r\n        const csvFile = [\r\n            [\"Word\",\"Frequency\"],\r\n            ...options.xaxis.categories.map((category, index) => {\r\n                category,\r\n                series[0].data[index]\r\n            }),\r\n        ]\r\n        .map((row) => row.join(\",\"))\r\n        .join()\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <h1>Fetching Details</h1>\r\n            <form onSubmit={handleSubmit}> \r\n                <button type=\"submit\">submit</button>\r\n            </form>\r\n            <p>{fileContent}</p>\r\n            <h2>Words:</h2>\r\n            {/* <ul>\r\n                {Object.entries(wordCount)\r\n                .sort(([, a],[, b]) => b - a)\r\n                .map(([word, frequency]) =>(\r\n                    <li key= {word}>\r\n                        {word} : {frequency}\r\n                    </li>\r\n                ))}\r\n            </ul> */}\r\n            <div>\r\n            <Chart\r\n              options={options}\r\n              series={createChart()}\r\n              type=\"bar\"\r\n              width=\"500\"\r\n            />\r\n            </div>\r\n            <div>\r\n                <button id=\"btn\" onClick={handleExport}>Export</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FileReader;\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}