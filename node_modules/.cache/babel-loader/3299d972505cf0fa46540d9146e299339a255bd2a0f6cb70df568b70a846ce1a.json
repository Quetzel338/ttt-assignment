{"ast":null,"code":"var _jsxFileName = \"D:\\\\STUDY\\\\6TH SEMESTER\\\\REACT\\\\TTT_Project\\\\ttt\\\\src\\\\Extra.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport ApexCharts from \"react-apexcharts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Histogram = () => {\n  _s();\n  const [data, setData] = useState(\"\");\n  const [chartOptions, setChartOptions] = useState({\n    chart: {\n      id: \"histogram\"\n    },\n    xaxis: {\n      categories: []\n    },\n    plotOptions: {\n      bar: {\n        horizontal: false,\n        columnWidth: \"50%\",\n        endingShape: \"rounded\"\n      }\n    },\n    dataLabels: {\n      enabled: false\n    },\n    fill: {\n      opacity: 1\n    }\n  });\n  const [chartSeries, setChartSeries] = useState([{\n    name: \"Frequency\",\n    data: []\n  }]);\n  const handleInputChange = event => {\n    setData(event.target.value);\n  };\n  const handleFormSubmit = event => {\n    event.preventDefault();\n    const dataArray = data.split(/\\s+/);\n    const frequency = dataArray.reduce((acc, element) => {\n      acc[element] = (acc[element] || 0) + 1;\n      return acc;\n    }, {});\n    const categories = Object.keys(frequency).slice(0, 20).sort((a, b) => frequency[b] - frequency[a]);\n    const dataSeries = Object.values(frequency).slice(0, 20).sort((a, b) => b - a);\n    setChartOptions({\n      ...chartOptions,\n      xaxis: {\n        ...chartOptions.xaxis,\n        categories\n      }\n    });\n    setChartSeries([{\n      name: \"Frequency\",\n      data: dataSeries\n    }]);\n  };\n  const createHistogram = () => {\n    return chartSeries.map(series => ({\n      name: series.name,\n      data: series.data.map((value, index) => ({\n        x: chartOptions.xaxis.categories[index],\n        y: value\n      }))\n    }));\n  };\n  const exportHistogram = () => {\n    const csvContent = [[\"Category\", \"Frequency\"], ...chartOptions.xaxis.categories.map((category, index) => [category, chartSeries[0].data[index]])].map(row => row.join(\",\")).join(\"\\n\");\n    const element = document.createElement(\"a\");\n    const file = new Blob([csvContent], {\n      type: \"text/csv\"\n    });\n    element.href = URL.createObjectURL(file);\n    element.download = \"histogram.csv\";\n    document.body.appendChild(element);\n    element.click();\n    document.body.removeChild(element);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleFormSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Enter data:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: data,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Histogram:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ApexCharts, {\n      options: chartOptions,\n      series: createHistogram(),\n      type: \"bar\",\n      height: 350\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), chartOptions.xaxis.categories.length > 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: exportHistogram,\n      children: \"Export Histogram\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n};\n_s(Histogram, \"9F6yT4tCSCxgXyOQc/IWtnfk6ZI=\");\n_c = Histogram;\nexport default Histogram;\nvar _c;\n$RefreshReg$(_c, \"Histogram\");","map":{"version":3,"names":["React","useState","ApexCharts","jsxDEV","_jsxDEV","Histogram","_s","data","setData","chartOptions","setChartOptions","chart","id","xaxis","categories","plotOptions","bar","horizontal","columnWidth","endingShape","dataLabels","enabled","fill","opacity","chartSeries","setChartSeries","name","handleInputChange","event","target","value","handleFormSubmit","preventDefault","dataArray","split","frequency","reduce","acc","element","Object","keys","slice","sort","a","b","dataSeries","values","createHistogram","map","series","index","x","y","exportHistogram","csvContent","category","row","join","document","createElement","file","Blob","type","href","URL","createObjectURL","download","body","appendChild","click","removeChild","children","onSubmit","onChange","fileName","_jsxFileName","lineNumber","columnNumber","options","height","length","onClick","_c","$RefreshReg$"],"sources":["D:/STUDY/6TH SEMESTER/REACT/TTT_Project/ttt/src/Extra.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport ApexCharts from \"react-apexcharts\";\r\n\r\nconst Histogram = () => {\r\n  const [data, setData] = useState(\"\");\r\n  const [chartOptions, setChartOptions] = useState({\r\n    chart: {\r\n      id: \"histogram\",\r\n    },\r\n    xaxis: {\r\n      categories: [],\r\n    },\r\n    plotOptions: {\r\n      bar: {\r\n        horizontal: false,\r\n        columnWidth: \"50%\",\r\n        endingShape: \"rounded\",\r\n      },\r\n    },\r\n    dataLabels: {\r\n      enabled: false,\r\n    },\r\n    fill: {\r\n      opacity: 1,\r\n    },\r\n  });\r\n  const [chartSeries, setChartSeries] = useState([\r\n    {\r\n      name: \"Frequency\",\r\n      data: [],\r\n    },\r\n  ]);\r\n\r\n  const handleInputChange = (event) => {\r\n    setData(event.target.value);\r\n  };\r\n\r\n  const handleFormSubmit = (event) => {\r\n    event.preventDefault();\r\n    const dataArray = data.split(/\\s+/);\r\n    const frequency = dataArray.reduce((acc, element) => {\r\n      acc[element] = (acc[element] || 0) + 1;\r\n      return acc;\r\n    }, {});\r\n    const categories = Object.keys(frequency).slice(0, 20).sort((a, b) => frequency[b] - frequency[a]);\r\n    const dataSeries = Object.values(frequency).slice(0, 20).sort((a, b) => b - a);\r\n    setChartOptions({\r\n      ...chartOptions,\r\n      xaxis: {\r\n        ...chartOptions.xaxis,\r\n        categories,\r\n      },\r\n    });\r\n    setChartSeries([\r\n      {\r\n        name: \"Frequency\",\r\n        data: dataSeries,\r\n      },\r\n    ]);\r\n  };\r\n\r\n  const createHistogram = () => {\r\n    return chartSeries.map((series) => ({\r\n      name: series.name,\r\n      data: series.data.map((value, index) => ({\r\n        x: chartOptions.xaxis.categories[index],\r\n        y: value,\r\n      })),\r\n    }));\r\n  };\r\n\r\n  const exportHistogram = () => {\r\n    const csvContent = [\r\n      [\"Category\", \"Frequency\"],\r\n      ...chartOptions.xaxis.categories.map((category, index) => [\r\n        category,\r\n        chartSeries[0].data[index],\r\n      ]),\r\n    ]\r\n      .map((row) => row.join(\",\"))\r\n      .join(\"\\n\");\r\n    const element = document.createElement(\"a\");\r\n    const file = new Blob([csvContent], { type: \"text/csv\" });\r\n    element.href = URL.createObjectURL(file);\r\n    element.download = \"histogram.csv\";\r\n    document.body.appendChild(element);\r\n    element.click();\r\n    document.body.removeChild(element);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={handleFormSubmit}>\r\n        <label>\r\n          Enter data:\r\n          <input type=\"text\" value={data} onChange={handleInputChange} />\r\n        </label>\r\n        <button type=\"submit\">Submit</button>\r\n      </form>\r\n      <h2>Histogram:</h2>\r\n      <ApexCharts\r\n        options={chartOptions}\r\n        series={createHistogram()}\r\n        type=\"bar\"\r\n        height={350}\r\n      />\r\n      {chartOptions.xaxis.categories.length > 0 && (\r\n        <button onClick={exportHistogram}>Export Histogram</button>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Histogram;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}