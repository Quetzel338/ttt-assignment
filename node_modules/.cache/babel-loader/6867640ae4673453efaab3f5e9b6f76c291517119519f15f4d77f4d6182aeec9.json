{"ast":null,"code":"var _jsxFileName = \"D:\\\\STUDY\\\\6TH SEMESTER\\\\REACT\\\\TTT_Project\\\\ttt\\\\src\\\\FileReader.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useState } from \"react\";\nimport Chart from \"react-apexcharts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction FileReader() {\n  _s();\n  const [fileContent, setFileContent] = useState(\"\");\n  const [wordCount, setWordCount] = useState({});\n  const handleSubmit = event => {\n    event.preventDefault();\n    fetch(\"https://www.terriblytinytales.com/test.txt\").then(response => response.text()).then(text => {\n      const words = text.toLowerCase().split(/\\W+/);\n      const frequency = words.reduce((acc, word) => {\n        acc[word] = (acc[word] || 0) + 1;\n        return acc;\n      }, {});\n      setWordCount(frequency);\n      setFileContent(text);\n    }).catch(error => console.log(error));\n  };\n  const histoGram = () => {\n    return Object.entries(wordCount).sort((_ref, _ref2) => {\n      let [, a] = _ref;\n      let [, b] = _ref2;\n      return b - a;\n    }).map(_ref3 => {\n      let [word, frequency] = _ref3;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [word, \" : \", Array(frequency).fill(\"*\"), \" \"]\n      }, word, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this);\n    });\n  };\n  const [state, setState] = useState({\n    options: {\n      chart: {\n        id: \"basic-bar\"\n      },\n      xaxis: {\n        categories: [1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999]\n      }\n    },\n    series: [{\n      name: \"series-1\",\n      data: [30, 40, 45, 50, 49, 60, 70, 91]\n    }]\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Fetching Details\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: fileContent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"HistoGram\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: histoGram\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Chart, {\n        options: state.options,\n        series: state.series,\n        type: \"histogram\",\n        width: \"500\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n}\n_s(FileReader, \"LV/MuNGqlZt9ZljOSgOdfWZ4CwU=\");\n_c = FileReader;\nexport default FileReader;\nvar _c;\n$RefreshReg$(_c, \"FileReader\");","map":{"version":3,"names":["React","useState","Chart","jsxDEV","_jsxDEV","FileReader","_s","fileContent","setFileContent","wordCount","setWordCount","handleSubmit","event","preventDefault","fetch","then","response","text","words","toLowerCase","split","frequency","reduce","acc","word","catch","error","console","log","histoGram","Object","entries","sort","_ref","_ref2","a","b","map","_ref3","children","Array","fill","fileName","_jsxFileName","lineNumber","columnNumber","state","setState","options","chart","id","xaxis","categories","series","name","data","onSubmit","type","width","_c","$RefreshReg$"],"sources":["D:/STUDY/6TH SEMESTER/REACT/TTT_Project/ttt/src/FileReader.js"],"sourcesContent":["import React from \"react\"; \r\nimport { useState} from \"react\";\r\nimport Chart from \"react-apexcharts\";\r\n\r\n\r\nfunction FileReader(){\r\n\r\n    const[fileContent, setFileContent] = useState(\"\");\r\n    const[wordCount, setWordCount] = useState({})\r\n\r\n    const handleSubmit = (event) =>{\r\n         event.preventDefault();\r\n         fetch(\"https://www.terriblytinytales.com/test.txt\")\r\n        .then((response) => response.text())\r\n        .then((text) => {\r\n            const words = text.toLowerCase().split(/\\W+/);\r\n            const frequency = words.reduce((acc, word) => {\r\n            acc[word] = (acc[word] || 0) + 1;\r\n            return acc;\r\n            }, {});\r\n            setWordCount(frequency);\r\n            setFileContent(text);\r\n        })\r\n        .catch((error) => console.log(error));\r\n        \r\n    };\r\n\r\n    const histoGram = ()=>{\r\n        return  Object.entries(wordCount)\r\n            .sort(([, a],[, b]) => b - a)\r\n            .map(([word, frequency]) =>(\r\n                <div key={word}>\r\n                {word} : {Array(frequency).fill(\"*\")} </div>\r\n            ));\r\n    }\r\n\r\n\r\n    const[state, setState] = useState({\r\n        options: {\r\n          chart: {\r\n            id: \"basic-bar\"\r\n          },\r\n          xaxis: {\r\n            categories: [1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999]\r\n          }\r\n\r\n        },\r\n        series: [\r\n          {\r\n            name: \"series-1\",\r\n            data: [30, 40, 45, 50, 49, 60, 70, 91]\r\n          }\r\n        ]\r\n      });\r\n\r\n\r\n    return(\r\n        <div>\r\n            <h1>Fetching Details</h1>\r\n            <form onSubmit={handleSubmit}> \r\n                <button type=\"submit\">submit</button>\r\n            </form>\r\n            <p>{fileContent}</p>\r\n            <h2>HistoGram</h2>\r\n            <div>{histoGram}</div>\r\n            <div>\r\n            <Chart\r\n              options={state.options}\r\n              series={state.series}\r\n              type=\"histogram\"\r\n              width=\"500\"\r\n            />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FileReader;\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}