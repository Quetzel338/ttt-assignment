{"ast":null,"code":"var _jsxFileName = \"D:\\\\STUDY\\\\6TH SEMESTER\\\\REACT\\\\TTT_Project\\\\ttt\\\\src\\\\FileReader.js\",\n  _s = $RefreshSig$();\n// import React from \"react\"; \n// import { useState} from \"react\";\n\n// function FileReader({fileUrl}){\n\n//     const[fileContent, setFileContent] = useState(\"\");\n//     const[wordCount, setWordCount] = useState(\"\")\n\n//     const handleSubmit = async(event) =>{\n//          event.preventDefault();\n//          const response = await fetch(\"https://www.terriblytinytales.com/test.txt\")\n//          const data = await response.text();\n//          setFileContent(data);\n\n//          const words = data.split(\" \");\n//          const frequency = words.reduce((acc, word) =>{\n//              acc[word] = (acc[word] || 0) + 1;\n//              return acc;\n//          }, {});\n\n//          setWordCount(frequency)\n//     }\n\n//     return(\n//         <div>\n//             <h1>Fetching Details</h1>\n//             <form onSubmit={handleSubmit}> \n//                 <button type=\"submit\">submit</button>\n//             </form>\n//             {/* <p>{fileContent}</p> */}\n//             <ul>\n//                 {Object.entries(setWordCount).map(([word, frequency]) =>{\n//                     <li key={word}>\n//                         {word} : {frequency}\n//                     </li>\n//                 })}\n//             </ul>\n//         </div>\n//     )\n// }\n\n// export default FileReader;\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WordFrequency = () => {\n  _s();\n  const [content, setContent] = useState(\"\");\n  const [wordFrequency, setWordFrequency] = useState({});\n  const handleFileChange = async event => {\n    const file = event.target.files[0];\n    const fileContent = await file.text();\n    setContent(fileContent);\n    const words = fileContent.split(/\\s+/);\n    const frequency = words.reduce((acc, word) => {\n      acc[word] = (acc[word] || 0) + 1;\n      return acc;\n    }, {});\n    setWordFrequency(frequency);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: handleFileChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: Object.entries(wordFrequency).map(_ref => {\n        let [word, frequency] = _ref;\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [word, \": \", frequency]\n        }, word, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n_s(WordFrequency, \"PRrdNkS/oCeb/UnzaWJ0TiNl4Qo=\");\n_c = WordFrequency;\nexport default WordFrequency;\nvar _c;\n$RefreshReg$(_c, \"WordFrequency\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","WordFrequency","_s","content","setContent","wordFrequency","setWordFrequency","handleFileChange","event","file","target","files","fileContent","text","words","split","frequency","reduce","acc","word","children","type","onChange","fileName","_jsxFileName","lineNumber","columnNumber","Object","entries","map","_ref","_c","$RefreshReg$"],"sources":["D:/STUDY/6TH SEMESTER/REACT/TTT_Project/ttt/src/FileReader.js"],"sourcesContent":["// import React from \"react\"; \r\n// import { useState} from \"react\";\r\n\r\n// function FileReader({fileUrl}){\r\n\r\n//     const[fileContent, setFileContent] = useState(\"\");\r\n//     const[wordCount, setWordCount] = useState(\"\")\r\n\r\n//     const handleSubmit = async(event) =>{\r\n//          event.preventDefault();\r\n//          const response = await fetch(\"https://www.terriblytinytales.com/test.txt\")\r\n//          const data = await response.text();\r\n//          setFileContent(data);\r\n\r\n//          const words = data.split(\" \");\r\n//          const frequency = words.reduce((acc, word) =>{\r\n//              acc[word] = (acc[word] || 0) + 1;\r\n//              return acc;\r\n//          }, {});\r\n\r\n//          setWordCount(frequency)\r\n//     }\r\n\r\n    \r\n\r\n//     return(\r\n//         <div>\r\n//             <h1>Fetching Details</h1>\r\n//             <form onSubmit={handleSubmit}> \r\n//                 <button type=\"submit\">submit</button>\r\n//             </form>\r\n//             {/* <p>{fileContent}</p> */}\r\n//             <ul>\r\n//                 {Object.entries(setWordCount).map(([word, frequency]) =>{\r\n//                     <li key={word}>\r\n//                         {word} : {frequency}\r\n//                     </li>\r\n//                 })}\r\n//             </ul>\r\n//         </div>\r\n//     )\r\n// }\r\n\r\n// export default FileReader;\r\n\r\nimport React, { useState } from \"react\";\r\n\r\nconst WordFrequency = () => {\r\n  const [content, setContent] = useState(\"\");\r\n  const [wordFrequency, setWordFrequency] = useState({});\r\n\r\n  const handleFileChange = async (event) => {\r\n    const file = event.target.files[0];\r\n    const fileContent = await file.text();\r\n    setContent(fileContent);\r\n\r\n    const words = fileContent.split(/\\s+/);\r\n    const frequency = words.reduce((acc, word) => {\r\n      acc[word] = (acc[word] || 0) + 1;\r\n      return acc;\r\n    }, {});\r\n\r\n    setWordFrequency(frequency);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <input type=\"file\" onChange={handleFileChange} />\r\n      <ul>\r\n        {Object.entries(wordFrequency).map(([word, frequency]) => (\r\n          <li key={word}>\r\n            {word}: {frequency}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WordFrequency;\r\n"],"mappings":";;AAAA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACO,aAAa,EAAEC,gBAAgB,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAAC,CAAC;EAEtD,MAAMS,gBAAgB,GAAG,MAAOC,KAAK,IAAK;IACxC,MAAMC,IAAI,GAAGD,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAClC,MAAMC,WAAW,GAAG,MAAMH,IAAI,CAACI,IAAI,CAAC,CAAC;IACrCT,UAAU,CAACQ,WAAW,CAAC;IAEvB,MAAME,KAAK,GAAGF,WAAW,CAACG,KAAK,CAAC,KAAK,CAAC;IACtC,MAAMC,SAAS,GAAGF,KAAK,CAACG,MAAM,CAAC,CAACC,GAAG,EAAEC,IAAI,KAAK;MAC5CD,GAAG,CAACC,IAAI,CAAC,GAAG,CAACD,GAAG,CAACC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC;MAChC,OAAOD,GAAG;IACZ,CAAC,EAAE,CAAC,CAAC,CAAC;IAENZ,gBAAgB,CAACU,SAAS,CAAC;EAC7B,CAAC;EAED,oBACEhB,OAAA;IAAAoB,QAAA,gBACEpB,OAAA;MAAOqB,IAAI,EAAC,MAAM;MAACC,QAAQ,EAAEf;IAAiB;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACjD1B,OAAA;MAAAoB,QAAA,EACGO,MAAM,CAACC,OAAO,CAACvB,aAAa,CAAC,CAACwB,GAAG,CAACC,IAAA;QAAA,IAAC,CAACX,IAAI,EAAEH,SAAS,CAAC,GAAAc,IAAA;QAAA,oBACnD9B,OAAA;UAAAoB,QAAA,GACGD,IAAI,EAAC,IAAE,EAACH,SAAS;QAAA,GADXG,IAAI;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAET,CAAC;MAAA,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAACxB,EAAA,CA9BID,aAAa;AAAA8B,EAAA,GAAb9B,aAAa;AAgCnB,eAAeA,aAAa;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}