{"ast":null,"code":"var _jsxFileName = \"D:\\\\STUDY\\\\6TH SEMESTER\\\\REACT\\\\TTT_Project\\\\ttt\\\\src\\\\Extra.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MyComponent = () => {\n  const myString = \"Hello world! This is is hello a simple hello  sample string.\";\n  const words = myString.split(\" \");\n  const freq = words.reduce((acc, word) => {\n    acc[word];\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"My String:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: myString\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Words:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: words.map((word, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: word\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n};\n_c = MyComponent;\nexport default MyComponent;\nvar _c;\n$RefreshReg$(_c, \"MyComponent\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","MyComponent","myString","words","split","freq","reduce","acc","word","children","fileName","_jsxFileName","lineNumber","columnNumber","map","index","_c","$RefreshReg$"],"sources":["D:/STUDY/6TH SEMESTER/REACT/TTT_Project/ttt/src/Extra.js"],"sourcesContent":["import React from \"react\";\r\n\r\nconst MyComponent = () => {\r\n  const myString = \"Hello world! This is is hello a simple hello  sample string.\";\r\n  const words = myString.split(\" \");\r\n  const freq = words.reduce((acc, word) => {\r\n      acc[word]\r\n  })\r\n  \r\n  return (\r\n    <div>\r\n      <h1>My String:</h1>\r\n      <p>{myString}</p>\r\n      <h2>Words:</h2>\r\n      <ul>\r\n        {words.map((word, index) => (\r\n          <li key={index}>{word}</li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyComponent;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,WAAW,GAAGA,CAAA,KAAM;EACxB,MAAMC,QAAQ,GAAG,8DAA8D;EAC/E,MAAMC,KAAK,GAAGD,QAAQ,CAACE,KAAK,CAAC,GAAG,CAAC;EACjC,MAAMC,IAAI,GAAGF,KAAK,CAACG,MAAM,CAAC,CAACC,GAAG,EAAEC,IAAI,KAAK;IACrCD,GAAG,CAACC,IAAI,CAAC;EACb,CAAC,CAAC;EAEF,oBACER,OAAA;IAAAS,QAAA,gBACET,OAAA;MAAAS,QAAA,EAAI;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnBb,OAAA;MAAAS,QAAA,EAAIP;IAAQ;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjBb,OAAA;MAAAS,QAAA,EAAI;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACfb,OAAA;MAAAS,QAAA,EACGN,KAAK,CAACW,GAAG,CAAC,CAACN,IAAI,EAAEO,KAAK,kBACrBf,OAAA;QAAAS,QAAA,EAAiBD;MAAI,GAAZO,KAAK;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY,CAC3B;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAACG,EAAA,GAnBIf,WAAW;AAqBjB,eAAeA,WAAW;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}