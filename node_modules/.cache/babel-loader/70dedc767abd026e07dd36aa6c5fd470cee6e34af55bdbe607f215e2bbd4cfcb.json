{"ast":null,"code":"var _jsxFileName = \"D:\\\\STUDY\\\\6TH SEMESTER\\\\REACT\\\\TTT_Project\\\\ttt\\\\src\\\\FileReader.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useState } from \"react\";\nimport Chart from \"react-apexcharts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction FileReader() {\n  _s();\n  const [fileContent, setFileContent] = useState(\"\");\n  const [wordCount, setWordCount] = useState({});\n  const [state, setState] = useState({\n    options: {\n      chart: {\n        id: \"histogram\"\n      },\n      xaxis: {\n        categories: []\n      }\n    }\n  });\n  const [series, setSeries] = useState([{\n    name: \"Frequency\",\n    data: []\n  }]);\n  const handleSubmit = event => {\n    event.preventDefault();\n    fetch(\"https://www.terriblytinytales.com/test.txt\").then(response => response.text()).then(text => {\n      const words = text.toLowerCase().split(/\\W+/);\n      const frequency = words.reduce((acc, word) => {\n        acc[word] = (acc[word] || 0) + 1;\n        return acc;\n      }, {});\n      setWordCount(frequency);\n      setFileContent(text);\n      const categories = Object.keys(frequency).slice(0, 20);\n      const dataSeries = Object.values(frequency).slice(0, 20);\n      setState({\n        ...state,\n        xaxis: {\n          ...state.xaxis,\n          categories\n        }\n      });\n      setSeries([{\n        name: \"frequency\"\n      }]);\n    }).catch(error => console.log(error));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Fetching Details\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: fileContent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Words:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Chart, {\n        options: state,\n        series: series,\n        type: \"bar\",\n        width: \"500\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n}\n_s(FileReader, \"yQx5tumZTdjp+q4F4ab6XWkH3UQ=\");\n_c = FileReader;\nexport default FileReader;\nvar _c;\n$RefreshReg$(_c, \"FileReader\");","map":{"version":3,"names":["React","useState","Chart","jsxDEV","_jsxDEV","FileReader","_s","fileContent","setFileContent","wordCount","setWordCount","state","setState","options","chart","id","xaxis","categories","series","setSeries","name","data","handleSubmit","event","preventDefault","fetch","then","response","text","words","toLowerCase","split","frequency","reduce","acc","word","Object","keys","slice","dataSeries","values","catch","error","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","width","_c","$RefreshReg$"],"sources":["D:/STUDY/6TH SEMESTER/REACT/TTT_Project/ttt/src/FileReader.js"],"sourcesContent":["import React from \"react\"; \r\nimport { useState} from \"react\";\r\nimport Chart from \"react-apexcharts\";\r\n\r\nfunction FileReader(){\r\n\r\n    const[fileContent, setFileContent] = useState(\"\");\r\n    const[wordCount, setWordCount] = useState({})\r\n    const[state, setState] = useState({options: {\r\n        chart: {\r\n          id: \"histogram\"\r\n        },\r\n        xaxis: {\r\n          categories: []\r\n        }\r\n      },\r\n    });\r\n\r\n    const[series, setSeries] = useState([\r\n        {\r\n            name : \"Frequency\",\r\n            data :[]\r\n        }\r\n    ]);\r\n\r\n    const handleSubmit = (event) =>{\r\n         event.preventDefault();\r\n         fetch(\"https://www.terriblytinytales.com/test.txt\")\r\n        .then((response) => response.text())\r\n        .then((text) => {\r\n            const words = text.toLowerCase().split(/\\W+/);\r\n            const frequency = words.reduce((acc, word) => {\r\n            acc[word] = (acc[word] || 0) + 1;\r\n            return acc;\r\n            }, {});\r\n            setWordCount(frequency);\r\n            setFileContent(text);\r\n\r\n            const categories = Object.keys(frequency).slice(0,20)\r\n            const dataSeries = Object.values(frequency).slice(0,20);\r\n            setState({...state,\r\n            xaxis :{\r\n                ...state.xaxis,categories\r\n             }\r\n            })\r\n            setSeries([\r\n                {   name : \"frequency\",\r\n                \r\n\r\n                }\r\n            ])\r\n\r\n        })\r\n        .catch((error) => console.log(error));\r\n        \r\n    };\r\n\r\n    return(\r\n        <div>\r\n            <h1>Fetching Details</h1>\r\n            <form onSubmit={handleSubmit}> \r\n                <button type=\"submit\">submit</button>\r\n            </form>\r\n            <p>{fileContent}</p>\r\n            <h2>Words:</h2>\r\n            {/* <ul>\r\n                {Object.entries(wordCount)\r\n                .sort(([, a],[, b]) => b - a)\r\n                .map(([word, frequency]) =>(\r\n                    <li key= {word}>\r\n                        {word} : {frequency}\r\n                    </li>\r\n                ))}\r\n            </ul> */}\r\n            <div>\r\n            <Chart\r\n              options={state}\r\n              series={series}\r\n              type=\"bar\"\r\n              width=\"500\"\r\n            />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FileReader;\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}